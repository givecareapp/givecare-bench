name: Validate Community Submission

on:
  pull_request:
    paths:
      - 'benchmark/community/submissions/*.json'

permissions:
  contents: read
  pull-requests: write

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install dependencies
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          uv pip install -e .

      - name: Validate submissions
        id: validate
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          VALIDATION_OUTPUT=""
          VALIDATION_FAILED=0

          for file in benchmark/community/submissions/*.json; do
            if [[ "$file" != "benchmark/community/submissions/TEMPLATE.json" ]] && [[ "$file" != "benchmark/community/submissions/.gitkeep" ]]; then
              echo "Validating $file..."
              if python benchmark/scripts/community/validate_submission.py "$file" --strict; then
                VALIDATION_OUTPUT="$VALIDATION_OUTPUT\n✅ $(basename $file): Valid"
              else
                VALIDATION_OUTPUT="$VALIDATION_OUTPUT\n❌ $(basename $file): FAILED validation"
                VALIDATION_FAILED=1
              fi
            fi
          done

          echo "validation_output<<EOF" >> $GITHUB_OUTPUT
          echo -e "$VALIDATION_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "validation_failed=$VALIDATION_FAILED" >> $GITHUB_OUTPUT

      - name: Update leaderboard (if validation passed)
        if: steps.validate.outputs.validation_failed == '0'
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          python benchmark/scripts/community/update_leaderboard.py

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const validationOutput = `${{ steps.validate.outputs.validation_output }}`;
            const validationFailed = ${{ steps.validate.outputs.validation_failed }};

            const body = validationFailed === 0
              ? `## ✅ Submission Validated Successfully!\n\n${validationOutput}\n\nLeaderboard will update automatically upon merge.`
              : `## ❌ Validation Failed\n\n${validationOutput}\n\nPlease fix the errors and push an update.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

            if (validationFailed !== 0) {
              core.setFailed('Submission validation failed');
            }
